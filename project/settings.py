"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_x16pk5n4$60p0f08s$g$*e_ok#%pu%_3vg7#^t_+udn0140t5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Packages
    'django.contrib.gis',

    # Apps
    'accounts.apps.AccountsConfig',
    'vendor.apps.VendorConfig',
    'menue.apps.MenueConfig',
    'marketplace.apps.MarketplaceConfig',
    'customers.apps.CustomersConfig',
    'orders.apps.OrdersConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'accounts.context_processors.get_vendor',
                'accounts.context_processors.get_google_api',
                'marketplace.context_processors.get_cart_count',
                'accounts.context_processors.get_user_profile',
                'accounts.context_processors.get_paypal_client_id',
                'accounts.context_processors.get_stripe_publishable_key',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.postgresql',  # Use PostgreSQL backend
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'foodonline',  # Name of your PostgreSQL database
        'USER': 'bayan',  # PostgreSQL username
        'PASSWORD': '2925',  # PostgreSQL password
        'HOST': 'localhost',  # Database host (set to 'localhost' if running locally)
        'PORT': '5432',  # Default PostgreSQL port
    }
}

# Custom User
AUTH_USER_MODEL = 'accounts.User'

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Istanbul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

MEDIA_URL = 'media/'

MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'ismekbektop@gmail.com'
EMAIL_HOST_PASSWORD = 'jkqzpvhuhlibdpsl'
DEFAULT_FROM_EMAIL = 'foodOnline Marketplace <ismekbektop@gmail.com>'

# Google API
GOOGLE_API_KEY = 'AIzaSyAh_VZ-pGAkNcLAC6JKryCw3ZekuFzUoxo'

# For Geo library
GDAL_LIBRARY_PATH = os.environ.get('GDAL_LIBRARY_PATH')
GEOS_LIBRARY_PATH = os.environ.get('GEOS_LIBRARY_PATH')

# PayPal settings
PAYPAL_CLIENT_ID = 'AWs6a7YzvNxQ9FrcdRBOUr-m5ELxqFCmtjwW10j8NR5UGzpakhN4wR99tzQjTYMn7NcJH0JB7EXPshz6'
# PAYPAL_CLIENT_SECRET = 'EGRgeJpl6onxMgng5-NHrGhCztV4-pxGpuUGRUUwMkO1Oau_21gQ0LHVSBm9-r77eRNeNbyi_QZS_y46'
# PAYPAL_MODE = 'sandbox'
# PAYPAL_RETURN_URL = 'http://127.0.0.1:8000/success/'
# PAYPAL_CANCEL_URL = 'http://127.0.0.1:8000/cancel/'

SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'

# Stripe settings
